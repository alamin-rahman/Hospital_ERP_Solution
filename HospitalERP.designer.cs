#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hospital_ERP_Solution
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hospital_ERP_Solution")]
	public partial class HospitalERPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Category(tbl_Category instance);
    partial void Updatetbl_Category(tbl_Category instance);
    partial void Deletetbl_Category(tbl_Category instance);
    partial void Inserttbl_AddDepartment(tbl_AddDepartment instance);
    partial void Updatetbl_AddDepartment(tbl_AddDepartment instance);
    partial void Deletetbl_AddDepartment(tbl_AddDepartment instance);
    partial void Inserttbl_RoomType(tbl_RoomType instance);
    partial void Updatetbl_RoomType(tbl_RoomType instance);
    partial void Deletetbl_RoomType(tbl_RoomType instance);
    partial void Inserttbl_Specialist(tbl_Specialist instance);
    partial void Updatetbl_Specialist(tbl_Specialist instance);
    partial void Deletetbl_Specialist(tbl_Specialist instance);
    partial void Inserttbl_PermanentDoctorInfo(tbl_PermanentDoctorInfo instance);
    partial void Updatetbl_PermanentDoctorInfo(tbl_PermanentDoctorInfo instance);
    partial void Deletetbl_PermanentDoctorInfo(tbl_PermanentDoctorInfo instance);
    partial void Inserttbl_GuestDoctorInfo(tbl_GuestDoctorInfo instance);
    partial void Updatetbl_GuestDoctorInfo(tbl_GuestDoctorInfo instance);
    partial void Deletetbl_GuestDoctorInfo(tbl_GuestDoctorInfo instance);
    partial void Inserttbl_Designation(tbl_Designation instance);
    partial void Updatetbl_Designation(tbl_Designation instance);
    partial void Deletetbl_Designation(tbl_Designation instance);
    partial void Inserttbl_IssueTest(tbl_IssueTest instance);
    partial void Updatetbl_IssueTest(tbl_IssueTest instance);
    partial void Deletetbl_IssueTest(tbl_IssueTest instance);
    partial void Inserttbl_LabTestEntry(tbl_LabTestEntry instance);
    partial void Updatetbl_LabTestEntry(tbl_LabTestEntry instance);
    partial void Deletetbl_LabTestEntry(tbl_LabTestEntry instance);
    partial void Inserttbl_invoice(tbl_invoice instance);
    partial void Updatetbl_invoice(tbl_invoice instance);
    partial void Deletetbl_invoice(tbl_invoice instance);
    partial void Inserttbl_LedgerAmount(tbl_LedgerAmount instance);
    partial void Updatetbl_LedgerAmount(tbl_LedgerAmount instance);
    partial void Deletetbl_LedgerAmount(tbl_LedgerAmount instance);
    partial void Inserttbl_DoctorPercentage(tbl_DoctorPercentage instance);
    partial void Updatetbl_DoctorPercentage(tbl_DoctorPercentage instance);
    partial void Deletetbl_DoctorPercentage(tbl_DoctorPercentage instance);
    partial void Inserttbl_DueCollection(tbl_DueCollection instance);
    partial void Updatetbl_DueCollection(tbl_DueCollection instance);
    partial void Deletetbl_DueCollection(tbl_DueCollection instance);
    partial void Inserttbl_Cash(tbl_Cash instance);
    partial void Updatetbl_Cash(tbl_Cash instance);
    partial void Deletetbl_Cash(tbl_Cash instance);
    #endregion
		
		public HospitalERPDataContext() : 
				base(global::Hospital_ERP_Solution.Properties.Settings.Default.Hospital_ERP_SolutionConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalERPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalERPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalERPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalERPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Category> tbl_Categories
		{
			get
			{
				return this.GetTable<tbl_Category>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AddDepartment> tbl_AddDepartments
		{
			get
			{
				return this.GetTable<tbl_AddDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_RoomType> tbl_RoomTypes
		{
			get
			{
				return this.GetTable<tbl_RoomType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Specialist> tbl_Specialists
		{
			get
			{
				return this.GetTable<tbl_Specialist>();
			}
		}
		
		public System.Data.Linq.Table<tbl_PermanentDoctorInfo> tbl_PermanentDoctorInfos
		{
			get
			{
				return this.GetTable<tbl_PermanentDoctorInfo>();
			}
		}
		
		public System.Data.Linq.Table<tbl_GuestDoctorInfo> tbl_GuestDoctorInfos
		{
			get
			{
				return this.GetTable<tbl_GuestDoctorInfo>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Designation> tbl_Designations
		{
			get
			{
				return this.GetTable<tbl_Designation>();
			}
		}
		
		public System.Data.Linq.Table<tbl_IssueTest> tbl_IssueTests
		{
			get
			{
				return this.GetTable<tbl_IssueTest>();
			}
		}
		
		public System.Data.Linq.Table<tbl_LabTestEntry> tbl_LabTestEntries
		{
			get
			{
				return this.GetTable<tbl_LabTestEntry>();
			}
		}
		
		public System.Data.Linq.Table<tbl_invoice> tbl_invoices
		{
			get
			{
				return this.GetTable<tbl_invoice>();
			}
		}
		
		public System.Data.Linq.Table<tbl_LedgerAmount> tbl_LedgerAmounts
		{
			get
			{
				return this.GetTable<tbl_LedgerAmount>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DoctorPercentage> tbl_DoctorPercentages
		{
			get
			{
				return this.GetTable<tbl_DoctorPercentage>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DueCollection> tbl_DueCollections
		{
			get
			{
				return this.GetTable<tbl_DueCollection>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Cash> tbl_Cashes
		{
			get
			{
				return this.GetTable<tbl_Cash>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Category")]
	public partial class tbl_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestId;
		
		private string _TestCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestIdChanging(int value);
    partial void OnTestIdChanged();
    partial void OnTestCategoryChanging(string value);
    partial void OnTestCategoryChanged();
    #endregion
		
		public tbl_Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestId
		{
			get
			{
				return this._TestId;
			}
			set
			{
				if ((this._TestId != value))
				{
					this.OnTestIdChanging(value);
					this.SendPropertyChanging();
					this._TestId = value;
					this.SendPropertyChanged("TestId");
					this.OnTestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCategory", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestCategory
		{
			get
			{
				return this._TestCategory;
			}
			set
			{
				if ((this._TestCategory != value))
				{
					this.OnTestCategoryChanging(value);
					this.SendPropertyChanging();
					this._TestCategory = value;
					this.SendPropertyChanged("TestCategory");
					this.OnTestCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_AddDepartment")]
	public partial class tbl_AddDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DptID;
		
		private string _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDptIDChanging(int value);
    partial void OnDptIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public tbl_AddDepartment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DptID
		{
			get
			{
				return this._DptID;
			}
			set
			{
				if ((this._DptID != value))
				{
					this.OnDptIDChanging(value);
					this.SendPropertyChanging();
					this._DptID = value;
					this.SendPropertyChanged("DptID");
					this.OnDptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_RoomType")]
	public partial class tbl_RoomType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RmTypID;
		
		private string _RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRmTypIDChanging(int value);
    partial void OnRmTypIDChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    #endregion
		
		public tbl_RoomType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RmTypID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RmTypID
		{
			get
			{
				return this._RmTypID;
			}
			set
			{
				if ((this._RmTypID != value))
				{
					this.OnRmTypIDChanging(value);
					this.SendPropertyChanging();
					this._RmTypID = value;
					this.SendPropertyChanged("RmTypID");
					this.OnRmTypIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Specialist")]
	public partial class tbl_Specialist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecialistID;
		
		private string _Specialist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialistIDChanging(int value);
    partial void OnSpecialistIDChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    #endregion
		
		public tbl_Specialist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialistID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpecialistID
		{
			get
			{
				return this._SpecialistID;
			}
			set
			{
				if ((this._SpecialistID != value))
				{
					this.OnSpecialistIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialistID = value;
					this.SendPropertyChanged("SpecialistID");
					this.OnSpecialistIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_PermanentDoctorInfo")]
	public partial class tbl_PermanentDoctorInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrmntDocInfoID;
		
		private System.DateTime _PrmntDocInfoDate;
		
		private string _DocID;
		
		private string _DoctorName;
		
		private System.DateTime _DateOfBirth;
		
		private string _BloodGroup;
		
		private string _NationalID;
		
		private string _DepartmantName;
		
		private string _Specialist;
		
		private string _InstituteName;
		
		private string _EducationalQualification;
		
		private string _Designation;
		
		private string _RegistrationNo;
		
		private bool _DoctorPhoto;
		
		private string _Address;
		
		private string _Email;
		
		private string _ContactNo;
		
		private string _AltContactNo;
		
		private string _Website;
		
		private string _SkypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrmntDocInfoIDChanging(int value);
    partial void OnPrmntDocInfoIDChanged();
    partial void OnPrmntDocInfoDateChanging(System.DateTime value);
    partial void OnPrmntDocInfoDateChanged();
    partial void OnDocIDChanging(string value);
    partial void OnDocIDChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnBloodGroupChanging(string value);
    partial void OnBloodGroupChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnDepartmantNameChanging(string value);
    partial void OnDepartmantNameChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    partial void OnInstituteNameChanging(string value);
    partial void OnInstituteNameChanged();
    partial void OnEducationalQualificationChanging(string value);
    partial void OnEducationalQualificationChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnRegistrationNoChanging(string value);
    partial void OnRegistrationNoChanged();
    partial void OnDoctorPhotoChanging(bool value);
    partial void OnDoctorPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnAltContactNoChanging(string value);
    partial void OnAltContactNoChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnSkypeIDChanging(string value);
    partial void OnSkypeIDChanged();
    #endregion
		
		public tbl_PermanentDoctorInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrmntDocInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrmntDocInfoID
		{
			get
			{
				return this._PrmntDocInfoID;
			}
			set
			{
				if ((this._PrmntDocInfoID != value))
				{
					this.OnPrmntDocInfoIDChanging(value);
					this.SendPropertyChanging();
					this._PrmntDocInfoID = value;
					this.SendPropertyChanged("PrmntDocInfoID");
					this.OnPrmntDocInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrmntDocInfoDate", DbType="DateTime NOT NULL")]
		public System.DateTime PrmntDocInfoDate
		{
			get
			{
				return this._PrmntDocInfoDate;
			}
			set
			{
				if ((this._PrmntDocInfoDate != value))
				{
					this.OnPrmntDocInfoDateChanging(value);
					this.SendPropertyChanging();
					this._PrmntDocInfoDate = value;
					this.SendPropertyChanged("PrmntDocInfoDate");
					this.OnPrmntDocInfoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this.OnBloodGroupChanging(value);
					this.SendPropertyChanging();
					this._BloodGroup = value;
					this.SendPropertyChanged("BloodGroup");
					this.OnBloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmantName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmantName
		{
			get
			{
				return this._DepartmantName;
			}
			set
			{
				if ((this._DepartmantName != value))
				{
					this.OnDepartmantNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmantName = value;
					this.SendPropertyChanged("DepartmantName");
					this.OnDepartmantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InstituteName
		{
			get
			{
				return this._InstituteName;
			}
			set
			{
				if ((this._InstituteName != value))
				{
					this.OnInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._InstituteName = value;
					this.SendPropertyChanged("InstituteName");
					this.OnInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalQualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EducationalQualification
		{
			get
			{
				return this._EducationalQualification;
			}
			set
			{
				if ((this._EducationalQualification != value))
				{
					this.OnEducationalQualificationChanging(value);
					this.SendPropertyChanging();
					this._EducationalQualification = value;
					this.SendPropertyChanged("EducationalQualification");
					this.OnEducationalQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorPhoto", DbType="Bit NOT NULL")]
		public bool DoctorPhoto
		{
			get
			{
				return this._DoctorPhoto;
			}
			set
			{
				if ((this._DoctorPhoto != value))
				{
					this.OnDoctorPhotoChanging(value);
					this.SendPropertyChanging();
					this._DoctorPhoto = value;
					this.SendPropertyChanged("DoctorPhoto");
					this.OnDoctorPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AltContactNo
		{
			get
			{
				return this._AltContactNo;
			}
			set
			{
				if ((this._AltContactNo != value))
				{
					this.OnAltContactNoChanging(value);
					this.SendPropertyChanging();
					this._AltContactNo = value;
					this.SendPropertyChanged("AltContactNo");
					this.OnAltContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkypeID
		{
			get
			{
				return this._SkypeID;
			}
			set
			{
				if ((this._SkypeID != value))
				{
					this.OnSkypeIDChanging(value);
					this.SendPropertyChanging();
					this._SkypeID = value;
					this.SendPropertyChanged("SkypeID");
					this.OnSkypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_GuestDoctorInfo")]
	public partial class tbl_GuestDoctorInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GstDocInfoID;
		
		private bool _DocPhoto;
		
		private System.DateTime _GstDocInfoDate;
		
		private string _DocID;
		
		private string _DocName;
		
		private string _DepartmentName;
		
		private string _Specialist;
		
		private string _InstituteName;
		
		private string _Designation;
		
		private string _Address;
		
		private string _Email;
		
		private string _ContactNo;
		
		private string _AltContactNo;
		
		private string _SkypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGstDocInfoIDChanging(int value);
    partial void OnGstDocInfoIDChanged();
    partial void OnDocPhotoChanging(bool value);
    partial void OnDocPhotoChanged();
    partial void OnGstDocInfoDateChanging(System.DateTime value);
    partial void OnGstDocInfoDateChanged();
    partial void OnDocIDChanging(string value);
    partial void OnDocIDChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    partial void OnInstituteNameChanging(string value);
    partial void OnInstituteNameChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnAltContactNoChanging(string value);
    partial void OnAltContactNoChanged();
    partial void OnSkypeIDChanging(string value);
    partial void OnSkypeIDChanged();
    #endregion
		
		public tbl_GuestDoctorInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GstDocInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GstDocInfoID
		{
			get
			{
				return this._GstDocInfoID;
			}
			set
			{
				if ((this._GstDocInfoID != value))
				{
					this.OnGstDocInfoIDChanging(value);
					this.SendPropertyChanging();
					this._GstDocInfoID = value;
					this.SendPropertyChanged("GstDocInfoID");
					this.OnGstDocInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPhoto", DbType="Bit NOT NULL")]
		public bool DocPhoto
		{
			get
			{
				return this._DocPhoto;
			}
			set
			{
				if ((this._DocPhoto != value))
				{
					this.OnDocPhotoChanging(value);
					this.SendPropertyChanging();
					this._DocPhoto = value;
					this.SendPropertyChanged("DocPhoto");
					this.OnDocPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GstDocInfoDate", DbType="DateTime NOT NULL")]
		public System.DateTime GstDocInfoDate
		{
			get
			{
				return this._GstDocInfoDate;
			}
			set
			{
				if ((this._GstDocInfoDate != value))
				{
					this.OnGstDocInfoDateChanging(value);
					this.SendPropertyChanging();
					this._GstDocInfoDate = value;
					this.SendPropertyChanged("GstDocInfoDate");
					this.OnGstDocInfoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstituteName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InstituteName
		{
			get
			{
				return this._InstituteName;
			}
			set
			{
				if ((this._InstituteName != value))
				{
					this.OnInstituteNameChanging(value);
					this.SendPropertyChanging();
					this._InstituteName = value;
					this.SendPropertyChanged("InstituteName");
					this.OnInstituteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AltContactNo
		{
			get
			{
				return this._AltContactNo;
			}
			set
			{
				if ((this._AltContactNo != value))
				{
					this.OnAltContactNoChanging(value);
					this.SendPropertyChanging();
					this._AltContactNo = value;
					this.SendPropertyChanged("AltContactNo");
					this.OnAltContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SkypeID
		{
			get
			{
				return this._SkypeID;
			}
			set
			{
				if ((this._SkypeID != value))
				{
					this.OnSkypeIDChanging(value);
					this.SendPropertyChanging();
					this._SkypeID = value;
					this.SendPropertyChanged("SkypeID");
					this.OnSkypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Designation")]
	public partial class tbl_Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesignationID;
		
		private string _Designation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIDChanging(int value);
    partial void OnDesignationIDChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public tbl_Designation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesignationID
		{
			get
			{
				return this._DesignationID;
			}
			set
			{
				if ((this._DesignationID != value))
				{
					this.OnDesignationIDChanging(value);
					this.SendPropertyChanging();
					this._DesignationID = value;
					this.SendPropertyChanged("DesignationID");
					this.OnDesignationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_IssueTest")]
	public partial class tbl_IssueTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IssueTestID;
		
		private string _InvoiceNo;
		
		private System.DateTime _OrderDate;
		
		private System.DateTime _DeliveryDate;
		
		private string _TestCode;
		
		private string _TestName;
		
		private string _RoomNo;
		
		private string _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _Discount;
		
		private decimal _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIssueTestIDChanging(int value);
    partial void OnIssueTestIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnTestCodeChanging(string value);
    partial void OnTestCodeChanged();
    partial void OnTestNameChanging(string value);
    partial void OnTestNameChanged();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public tbl_IssueTest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IssueTestID
		{
			get
			{
				return this._IssueTestID;
			}
			set
			{
				if ((this._IssueTestID != value))
				{
					this.OnIssueTestIDChanging(value);
					this.SendPropertyChanging();
					this._IssueTestID = value;
					this.SendPropertyChanged("IssueTestID");
					this.OnIssueTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this.OnTestCodeChanging(value);
					this.SendPropertyChanging();
					this._TestCode = value;
					this.SendPropertyChanged("TestCode");
					this.OnTestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this.OnTestNameChanging(value);
					this.SendPropertyChanging();
					this._TestName = value;
					this.SendPropertyChanged("TestName");
					this.OnTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LabTestEntry")]
	public partial class tbl_LabTestEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabTestID;
		
		private string _TestCategory;
		
		private string _TestID;
		
		private string _TestName;
		
		private decimal _TestPrice;
		
		private string _RoomNo;
		
		private System.DateTime _TestDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabTestIDChanging(int value);
    partial void OnLabTestIDChanged();
    partial void OnTestCategoryChanging(string value);
    partial void OnTestCategoryChanged();
    partial void OnTestIDChanging(string value);
    partial void OnTestIDChanged();
    partial void OnTestNameChanging(string value);
    partial void OnTestNameChanged();
    partial void OnTestPriceChanging(decimal value);
    partial void OnTestPriceChanged();
    partial void OnRoomNoChanging(string value);
    partial void OnRoomNoChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    #endregion
		
		public tbl_LabTestEntry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabTestID
		{
			get
			{
				return this._LabTestID;
			}
			set
			{
				if ((this._LabTestID != value))
				{
					this.OnLabTestIDChanging(value);
					this.SendPropertyChanging();
					this._LabTestID = value;
					this.SendPropertyChanged("LabTestID");
					this.OnLabTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCategory", DbType="VarChar(50)")]
		public string TestCategory
		{
			get
			{
				return this._TestCategory;
			}
			set
			{
				if ((this._TestCategory != value))
				{
					this.OnTestCategoryChanging(value);
					this.SendPropertyChanging();
					this._TestCategory = value;
					this.SendPropertyChanged("TestCategory");
					this.OnTestCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestID
		{
			get
			{
				return this._TestID;
			}
			set
			{
				if ((this._TestID != value))
				{
					this.OnTestIDChanging(value);
					this.SendPropertyChanging();
					this._TestID = value;
					this.SendPropertyChanged("TestID");
					this.OnTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this.OnTestNameChanging(value);
					this.SendPropertyChanging();
					this._TestName = value;
					this.SendPropertyChanged("TestName");
					this.OnTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPrice", DbType="Money NOT NULL")]
		public decimal TestPrice
		{
			get
			{
				return this._TestPrice;
			}
			set
			{
				if ((this._TestPrice != value))
				{
					this.OnTestPriceChanging(value);
					this.SendPropertyChanging();
					this._TestPrice = value;
					this.SendPropertyChanged("TestPrice");
					this.OnTestPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="DateTime NOT NULL")]
		public System.DateTime TestDate
		{
			get
			{
				return this._TestDate;
			}
			set
			{
				if ((this._TestDate != value))
				{
					this.OnTestDateChanging(value);
					this.SendPropertyChanging();
					this._TestDate = value;
					this.SendPropertyChanged("TestDate");
					this.OnTestDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_invoice")]
	public partial class tbl_invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _InvoiceNo;
		
		private System.DateTime _OrderDate;
		
		private System.DateTime _DeliveryDate;
		
		private string _PatientName;
		
		private string _Age;
		
		private string _DoctorName;
		
		private string _DoctorID;
		
		private string _Specialist;
		
		private string _Department;
		
		private string _Gender;
		
		private string _ContactNo;
		
		private decimal _Total;
		
		private decimal _Adjust;
		
		private decimal _NetPay;
		
		private decimal _Cash;
		
		private decimal _Due;
		
		private string _GroupID;
		
		private string _GroupName;
		
		private string _Under;
		
		private string _Type;
		
		private string _Particular;
		
		private System.Nullable<decimal> _Debit;
		
		private System.Nullable<decimal> _Credit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnAdjustChanging(decimal value);
    partial void OnAdjustChanged();
    partial void OnNetPayChanging(decimal value);
    partial void OnNetPayChanged();
    partial void OnCashChanging(decimal value);
    partial void OnCashChanged();
    partial void OnDueChanging(decimal value);
    partial void OnDueChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnUnderChanging(string value);
    partial void OnUnderChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnParticularChanging(string value);
    partial void OnParticularChanged();
    partial void OnDebitChanging(System.Nullable<decimal> value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    #endregion
		
		public tbl_invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adjust", DbType="Money NOT NULL")]
		public decimal Adjust
		{
			get
			{
				return this._Adjust;
			}
			set
			{
				if ((this._Adjust != value))
				{
					this.OnAdjustChanging(value);
					this.SendPropertyChanging();
					this._Adjust = value;
					this.SendPropertyChanged("Adjust");
					this.OnAdjustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPay", DbType="Money NOT NULL")]
		public decimal NetPay
		{
			get
			{
				return this._NetPay;
			}
			set
			{
				if ((this._NetPay != value))
				{
					this.OnNetPayChanging(value);
					this.SendPropertyChanging();
					this._NetPay = value;
					this.SendPropertyChanged("NetPay");
					this.OnNetPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Money NOT NULL")]
		public decimal Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Money NOT NULL")]
		public decimal Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Under
		{
			get
			{
				return this._Under;
			}
			set
			{
				if ((this._Under != value))
				{
					this.OnUnderChanging(value);
					this.SendPropertyChanging();
					this._Under = value;
					this.SendPropertyChanged("Under");
					this.OnUnderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particular", DbType="VarChar(50)")]
		public string Particular
		{
			get
			{
				return this._Particular;
			}
			set
			{
				if ((this._Particular != value))
				{
					this.OnParticularChanging(value);
					this.SendPropertyChanging();
					this._Particular = value;
					this.SendPropertyChanged("Particular");
					this.OnParticularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Money")]
		public System.Nullable<decimal> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LedgerAmount")]
	public partial class tbl_LedgerAmount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sl;
		
		private string _LeaderId;
		
		private string _date;
		
		private string _LadgerName;
		
		private string _Undergrp;
		
		private string _Nature;
		
		private string _Particulars;
		
		private System.Nullable<decimal> _debit;
		
		private System.Nullable<decimal> _credit;
		
		private string _Description;
		
		private string _vchType;
		
		private string _InvoiceNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlChanging(int value);
    partial void OnSlChanged();
    partial void OnLeaderIdChanging(string value);
    partial void OnLeaderIdChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnLadgerNameChanging(string value);
    partial void OnLadgerNameChanged();
    partial void OnUndergrpChanging(string value);
    partial void OnUndergrpChanged();
    partial void OnNatureChanging(string value);
    partial void OnNatureChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OndebitChanging(System.Nullable<decimal> value);
    partial void OndebitChanged();
    partial void OncreditChanging(System.Nullable<decimal> value);
    partial void OncreditChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnvchTypeChanging(string value);
    partial void OnvchTypeChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    #endregion
		
		public tbl_LedgerAmount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sl", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sl
		{
			get
			{
				return this._Sl;
			}
			set
			{
				if ((this._Sl != value))
				{
					this.OnSlChanging(value);
					this.SendPropertyChanging();
					this._Sl = value;
					this.SendPropertyChanged("Sl");
					this.OnSlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderId", DbType="VarChar(50)")]
		public string LeaderId
		{
			get
			{
				return this._LeaderId;
			}
			set
			{
				if ((this._LeaderId != value))
				{
					this.OnLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderId = value;
					this.SendPropertyChanged("LeaderId");
					this.OnLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LadgerName", DbType="VarChar(50)")]
		public string LadgerName
		{
			get
			{
				return this._LadgerName;
			}
			set
			{
				if ((this._LadgerName != value))
				{
					this.OnLadgerNameChanging(value);
					this.SendPropertyChanging();
					this._LadgerName = value;
					this.SendPropertyChanged("LadgerName");
					this.OnLadgerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Undergrp", DbType="VarChar(50)")]
		public string Undergrp
		{
			get
			{
				return this._Undergrp;
			}
			set
			{
				if ((this._Undergrp != value))
				{
					this.OnUndergrpChanging(value);
					this.SendPropertyChanging();
					this._Undergrp = value;
					this.SendPropertyChanged("Undergrp");
					this.OnUndergrpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="VarChar(50)")]
		public string Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="VarChar(50)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> debit
		{
			get
			{
				return this._debit;
			}
			set
			{
				if ((this._debit != value))
				{
					this.OndebitChanging(value);
					this.SendPropertyChanging();
					this._debit = value;
					this.SendPropertyChanged("debit");
					this.OndebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> credit
		{
			get
			{
				return this._credit;
			}
			set
			{
				if ((this._credit != value))
				{
					this.OncreditChanging(value);
					this.SendPropertyChanging();
					this._credit = value;
					this.SendPropertyChanged("credit");
					this.OncreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchType", DbType="VarChar(50)")]
		public string vchType
		{
			get
			{
				return this._vchType;
			}
			set
			{
				if ((this._vchType != value))
				{
					this.OnvchTypeChanging(value);
					this.SendPropertyChanging();
					this._vchType = value;
					this.SendPropertyChanged("vchType");
					this.OnvchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50)")]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DoctorPercentage")]
	public partial class tbl_DoctorPercentage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocPrcntID;
		
		private string _DoctorID;
		
		private string _DoctorName;
		
		private string _Specialist;
		
		private string _TestCategory;
		
		private decimal _Percentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocPrcntIDChanging(int value);
    partial void OnDocPrcntIDChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnSpecialistChanging(string value);
    partial void OnSpecialistChanged();
    partial void OnTestCategoryChanging(string value);
    partial void OnTestCategoryChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    #endregion
		
		public tbl_DoctorPercentage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPrcntID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocPrcntID
		{
			get
			{
				return this._DocPrcntID;
			}
			set
			{
				if ((this._DocPrcntID != value))
				{
					this.OnDocPrcntIDChanging(value);
					this.SendPropertyChanging();
					this._DocPrcntID = value;
					this.SendPropertyChanged("DocPrcntID");
					this.OnDocPrcntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(50)")]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="VarChar(50)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialist", DbType="VarChar(50)")]
		public string Specialist
		{
			get
			{
				return this._Specialist;
			}
			set
			{
				if ((this._Specialist != value))
				{
					this.OnSpecialistChanging(value);
					this.SendPropertyChanging();
					this._Specialist = value;
					this.SendPropertyChanged("Specialist");
					this.OnSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCategory", DbType="VarChar(50)")]
		public string TestCategory
		{
			get
			{
				return this._TestCategory;
			}
			set
			{
				if ((this._TestCategory != value))
				{
					this.OnTestCategoryChanging(value);
					this.SendPropertyChanging();
					this._TestCategory = value;
					this.SendPropertyChanged("TestCategory");
					this.OnTestCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Money NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DueCollection")]
	public partial class tbl_DueCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DueColID;
		
		private string _InvoiceNo;
		
		private string _OrderDate;
		
		private string _DeliveryDate;
		
		private string _PatientName;
		
		private string _DoctorID;
		
		private string _VoucherType;
		
		private decimal _TotalAmount;
		
		private decimal _PaidAmount;
		
		private decimal _DueAmount;
		
		private decimal _PayDueAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDueColIDChanging(int value);
    partial void OnDueColIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnOrderDateChanging(string value);
    partial void OnOrderDateChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnVoucherTypeChanging(string value);
    partial void OnVoucherTypeChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnDueAmountChanging(decimal value);
    partial void OnDueAmountChanged();
    partial void OnPayDueAmountChanging(decimal value);
    partial void OnPayDueAmountChanged();
    #endregion
		
		public tbl_DueCollection()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueColID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DueColID
		{
			get
			{
				return this._DueColID;
			}
			set
			{
				if ((this._DueColID != value))
				{
					this.OnDueColIDChanging(value);
					this.SendPropertyChanging();
					this._DueColID = value;
					this.SendPropertyChanged("DueColID");
					this.OnDueColIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoucherType
		{
			get
			{
				return this._VoucherType;
			}
			set
			{
				if ((this._VoucherType != value))
				{
					this.OnVoucherTypeChanging(value);
					this.SendPropertyChanging();
					this._VoucherType = value;
					this.SendPropertyChanged("VoucherType");
					this.OnVoucherTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Money NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueAmount", DbType="Money NOT NULL")]
		public decimal DueAmount
		{
			get
			{
				return this._DueAmount;
			}
			set
			{
				if ((this._DueAmount != value))
				{
					this.OnDueAmountChanging(value);
					this.SendPropertyChanging();
					this._DueAmount = value;
					this.SendPropertyChanged("DueAmount");
					this.OnDueAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDueAmount", DbType="Money NOT NULL")]
		public decimal PayDueAmount
		{
			get
			{
				return this._PayDueAmount;
			}
			set
			{
				if ((this._PayDueAmount != value))
				{
					this.OnPayDueAmountChanging(value);
					this.SendPropertyChanging();
					this._PayDueAmount = value;
					this.SendPropertyChanged("PayDueAmount");
					this.OnPayDueAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Cash")]
	public partial class tbl_Cash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CashID;
		
		private decimal _Cash;
		
		private string _Date;
		
		private string _Particular;
		
		private string _InvoiceNo;
		
		private string _VoucherType;
		
		private decimal _Debit;
		
		private System.Nullable<decimal> _Credit;
		
		private string _GroupID;
		
		private string _GroupName;
		
		private string _UnderGroup;
		
		private string _GroupType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCashIDChanging(int value);
    partial void OnCashIDChanged();
    partial void OnCashChanging(decimal value);
    partial void OnCashChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnParticularChanging(string value);
    partial void OnParticularChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnVoucherTypeChanging(string value);
    partial void OnVoucherTypeChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    partial void OnGroupIDChanging(string value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnUnderGroupChanging(string value);
    partial void OnUnderGroupChanged();
    partial void OnGroupTypeChanging(string value);
    partial void OnGroupTypeChanged();
    #endregion
		
		public tbl_Cash()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CashID
		{
			get
			{
				return this._CashID;
			}
			set
			{
				if ((this._CashID != value))
				{
					this.OnCashIDChanging(value);
					this.SendPropertyChanging();
					this._CashID = value;
					this.SendPropertyChanged("CashID");
					this.OnCashIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Money NOT NULL")]
		public decimal Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particular", DbType="VarChar(50)")]
		public string Particular
		{
			get
			{
				return this._Particular;
			}
			set
			{
				if ((this._Particular != value))
				{
					this.OnParticularChanging(value);
					this.SendPropertyChanging();
					this._Particular = value;
					this.SendPropertyChanged("Particular");
					this.OnParticularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VoucherType
		{
			get
			{
				return this._VoucherType;
			}
			set
			{
				if ((this._VoucherType != value))
				{
					this.OnVoucherTypeChanging(value);
					this.SendPropertyChanging();
					this._VoucherType = value;
					this.SendPropertyChanged("VoucherType");
					this.OnVoucherTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Money NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UnderGroup
		{
			get
			{
				return this._UnderGroup;
			}
			set
			{
				if ((this._UnderGroup != value))
				{
					this.OnUnderGroupChanging(value);
					this.SendPropertyChanging();
					this._UnderGroup = value;
					this.SendPropertyChanged("UnderGroup");
					this.OnUnderGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupType
		{
			get
			{
				return this._GroupType;
			}
			set
			{
				if ((this._GroupType != value))
				{
					this.OnGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._GroupType = value;
					this.SendPropertyChanged("GroupType");
					this.OnGroupTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
